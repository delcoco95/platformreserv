version: '3.8'

services:
  # Base de données MongoDB
  mongodb:
    image: mongo:7-jammy
    container_name: bookauto-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: platformreserv
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bookauto-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/platformreserv --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bookauto-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGO_URI=mongodb://mongodb:27017/platformreserv
      - JWT_SECRET=bookauto-jwt-secret-change-in-production-2024
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    networks:
      - bookauto-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React (développement)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: bookauto-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
      - VITE_APP_TITLE=BookAuto
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    networks:
      - bookauto-network

  # Frontend React (production)
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bookauto-frontend-prod
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - VITE_API_URL=http://localhost:5000
      - VITE_APP_TITLE=BookAuto
    depends_on:
      - backend
    networks:
      - bookauto-network
    profiles:
      - production

  # Redis pour le cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: bookauto-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bookauto-network
    profiles:
      - cache

  # Nginx Proxy (optionnel pour production)
  nginx-proxy:
    image: nginx:alpine
    container_name: bookauto-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend-prod
      - backend
    networks:
      - bookauto-network
    profiles:
      - production

networks:
  bookauto-network:
    driver: bridge
    name: bookauto-network

volumes:
  mongodb_data:
    driver: local
    name: bookauto-mongodb
  backend_uploads:
    driver: local
    name: bookauto-uploads
  redis_data:
    driver: local
    name: bookauto-redis
